#!/usr/bin/env node

'use strict';

const path = require('path');
const fs = require('fs');
const spawn = require('child_process').spawn;
const config = require('../src/config');

function existsSync(path) {
  try {
    return !!fs.statSync(path);
  } catch (e) {
    return false;
  }
}

function runScript(runner, pathToScript) {
  const args = [pathToScript].concat(process.argv.slice(3));
  const options = {stdio: 'inherit'};
  spawn(runner, args, options).on('close', exitCode => {
    const gonk = fs.readFileSync(path.resolve(__dirname, '../src/gonk.txt'), {encoding: 'utf8'});
    console.log(gonk);
  });
}

const scriptsDir = config.scriptsDir;

if (!existsSync(scriptsDir)) {
  fs.mkdirSync(scriptsDir);
}

const scriptToRun = process.argv[2];

if (!scriptToRun) {
  console.error('Script to run not provided');
  process.exit(1);
}

const pathToScript = path.join(scriptsDir, scriptToRun);

if (!existsSync(pathToScript)) {
  console.error('Script provided does not exist');
  process.exit(1);
}

const fileType = path.extname(pathToScript);

if (fileType === '.js') {
  return runScript('node', pathToScript);
}

console.error(`Unable to parse script of type: ${fileType}`);
process.exit(1);
